// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int                  @id @default(autoincrement())
  displayName    String
  answers        UserQuestionAnswer[]
  createdAt      DateTime             @default(now())
  updatedAt      DateTime             @updatedAt
  UserAnswerList UserAnswerList[]
}

model QuestionList {
  id           Int        @id @default(autoincrement())
  title        String
  questionList Question[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Question {
  id             Int                  @id @default(autoincrement())
  questionListId Int
  questionList   QuestionList         @relation(fields: [questionListId], references: [id], onDelete: Cascade)
  name           String
  answers        UserQuestionAnswer[]
  createdAt      DateTime             @default(now())
  updatedAt      DateTime             @updatedAt
}

model UserAnswerList {
  id         Int                  @id @default(autoincrement())
  memo       String
  answerList UserQuestionAnswer[]
  userId     Int
  user       User                 @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt  DateTime             @default(now())
  updatedAt  DateTime             @updatedAt
}

model UserQuestionAnswer {
  id           Int            @id @default(autoincrement())
  answerListId Int
  answerList   UserAnswerList @relation(fields: [answerListId], references: [id], onDelete: Cascade)
  questionId   Int
  question     Question       @relation(fields: [questionId], references: [id], onDelete: Cascade)
  answer       String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  User         User?          @relation(fields: [userId], references: [id])
  userId       Int?
}
